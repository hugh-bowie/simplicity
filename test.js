const fs = require('fs');
//random number function
function r(min, max) {
	return ~~(Math.random() * (max - min) + min);
}

//array of all them suffixes
const suffixList = [
	'a',
	'd',
	'e',
	'i',
	'k',
	'n',
	'o',
	's',
	't',
	'y',
	'z',
	'ab',
	'ac',
	'ad',
	'al',
	'an',
	'ar',
	'ay',
	'by',
	'cc',
	'ce',
	'cy',
	'ed',
	'ee',
	'eh',
	'el',
	'en',
	'er',
	'es',
	'et',
	'ex',
	'ey',
	'fu',
	'fy',
	'ia',
	'ic',
	'id',
	'ie',
	'in',
	'ja',
	'ji',
	'le',
	'ly',
	'mo',
	'nd',
	'nt',
	'oi',
	'ol',
	'on',
	'or',
	'os',
	'ov',
	'rd',
	'ry',
	'se',
	'st',
	'th',
	'ty',
	'um',
	'yl',
	'acy',
	'ade',
	'age',
	'all',
	'ana',
	'and',
	'ane',
	'ant',
	'ard',
	'ary',
	'ase',
	'ass',
	'ast',
	'ata',
	'ate',
	'bie',
	'bot',
	'cin',
	'dan',
	'dar',
	'dil',
	'dom',
	'dyl',
	'ean',
	'een',
	'eer',
	'ein',
	'eme',
	'end',
	'ene',
	'ent',
	'ern',
	'ers',
	'ery',
	'ese',
	'ess',
	'est',
	'eth',
	'ety',
	'fag',
	'fix',
	'fos',
	'ful',
	'gon',
	'ham',
	'iad',
	'ial',
	'ian',
	'ica',
	'ice',
	'ick',
	'ics',
	'ide',
	'ied',
	'ier',
	'ies',
	'ify',
	'ile',
	'ily',
	'ine',
	'ing',
	'Ã¯ng',
	'ino',
	'ion',
	'iot',
	'ise',
	'ish',
	'ism',
	'ist',
	'ite',
	'ity',
	'ium',
	'ive',
	'ize',
	'kin',
	'kin',
	'kun',
	'let',
	'lin',
	'log',
	'lyn',
	'mab',
	'man',
	'mas',
	'max',
	'men',
	'mer',
	'nab',
	'nap',
	'nik',
	'nom',
	'nym',
	'ock',
	'odd',
	'ode',
	'off',
	'oic',
	'oid',
	'ola',
	'ole',
	'oma',
	'ome',
	'one',
	'oon',
	'ory',
	'ose',
	'oth',
	'our',
	'ous',
	'oxy',
	'oyl',
	'ped',
	'ple',
	'pod',
	'poo',
	'rds',
	'red',
	'rel',
	'ren',
	'ric',
	'rix',
	'sal',
	'san',
	'sie',
	'sis',
	'ski',
	'sky',
	'sol',
	'son',
	'spo',
	'ton',
	'ual',
	'ule',
	'ure',
	'vac',
	'vir',
	'wad',
	'xor',
	'yer',
	'yne',
	'zza',
	'iza',
	'aza',
	'able',
	'ably',
	'aboo',
	'acal',
	'adic',
	'adol',
	'afil',
	'agog',
	'aire',
	'algy',
	'ally',
	'alol',
	'amic',
	'ance',
	'ancy',
	'anth',
	'arch',
	'arol',
	'aroo',
	'atim',
	'ator',
	'azam',
	'boro',
	'burg',
	'bury',
	'cade',
	'care',
	'carp',
	'cast',
	'cele',
	'cene',
	'cide',
	'coel',
	'cole',
	'core',
	'corn',
	'cort',
	'crat',
	'cyte',
	'dere',
	'derm',
	'dopa',
	'eaux',
	'eine',
	'elle',
	'emia',
	'ence',
	'ency',
	'enyl',
	'eous',
	'ergy',
	'eroo',
	'esce',
	'esis',
	'etic',
	'ette',
	'exia',
	'fest',
	'fier',
	'flux',
	'fold',
	'form',
	'free',
	'fuge',
	'gamy',
	'gasm',
	'gate',
	'ogen',
	'gest',
	'glot',
	'gony',
	'grel',
	'head',
	'hood',
	'iana',
	'ible',
	'ibly',
	'ical',
	'icam',
	'icle',
	'iest',
	'iety',
	'ific',
	'imus',
	'inda',
	'iour',
	'ious',
	'ista',
	'itis',
	'itol',
	'izer',
	'kind',
	'kini',
	'kins',
	'land',
	'lect',
	'lept',
	'less',
	'like',
	'ling',
	'lite',
	'lith',
	'lock',
	'logs',
	'logy',
	'long',
	'lyte',
	'mane',
	'mans',
	'meal',
	'ment',
	'mere',
	'mont',
	'mony',
	'more',
	'most',
	'nado',
	'naut',
	'nema',
	'neme',
	'ness',
	'nomy',
	'nymy',
	'oate',
	'olol',
	'onym',
	'opia',
	'opsy',
	'osin',
	'osis',
	'otic',
	'pexy',
	'phor',
	'phyl',
	'pine',
	'plex',
	'plon',
	'pnea',
	'poly',
	'pril',
	'prim',
	'pter',
	'punk',
	'rama',
	'ress',
	'safe',
	'sama',
	'saur',
	'self',
	'ship',
	'side',
	'sies',
	'sion',
	'soft',
	'some',
	'sona',
	'sson',
	'stan',
	'stat',
	'ster',
	'tant',
	'tard',
	'teen',
	'tene',
	'then',
	'thon',
	'tide',
	'time',
	'tion',
	'tobe',
	'toin',
	'tome',
	'tomy',
	'tope',
	'topy',
	'tort',
	'trix',
	'tron',
	'tude',
	'type',
	'uide',
	'umab',
	'uous',
	'uret',
	'urgy',
	'uria',
	'vore',
	'ward',
	'ware',
	'wash',
	'wave',
	'ways',
	'wear',
	'wich',
	'wick',
	'wide',
	'wise',
	'work',
	'xeny',
	'zoan',
	'zoic',
	'zoon',
	'athon',
	'acity',
	'aemia',
	'agogy',
	'algia',
	'ality',
	'amine',
	'ander',
	'andry',
	'angle',
	'anine',
	'apine',
	'archy',
	'arian',
	'arium',
	'arone',
	'asone',
	'assed',
	'aster',
	'astic',
	'asvir',
	'ation',
	'ative',
	'atory',
	'biont',
	'bital',
	'blast',
	'bound',
	'burgh',
	'buvir',
	'caine',
	'cavir',
	'chore',
	'chory',
	'cidal',
	'clase',
	'clast',
	'cline',
	'cocci',
	'coele',
	'coxib',
	'cracy',
	'craft',
	'crasy',
	'crete',
	'crine',
	'cross',
	'crypt',
	'derma',
	'desis',
	'diene',
	'dilol',
	'drine',
	'drome',
	'elect',
	'ergic',
	'esque',
	'fenac',
	'fiban',
	'fovir',
	'frine',
	'fugal',
	'ogamy',
	'ogate',
	'ogaze',
	'ogeny',
	'ogiri',
	'ogram',
	'agram',
	'grave',
	'ogyny',
	'happy',
	'hedra',
	'henge',
	'holic',
	'iasis',
	'iatry',
	'icase',
	'ician',
	'icide',
	'icism',
	'icity',
	'idene',
	'idine',
	'ienne',
	'ifene',
	'iform',
	'ilide',
	'imibe',
	'inlaw',
	'ismus',
	'istic',
	'itall',
	'itude',
	'izine',
	'izzle',
	'kacin',
	'kinra',
	'kiren',
	'lalia',
	'later',
	'latry',
	'leigh',
	'lepsy',
	'lings',
	'logic',
	'logue',
	'loquy',
	'lysis',
	'lytic',
	'machy',
	'mance',
	'mancy',
	'mania',
	'meter',
	'metre',
	'metry',
	'micin',
	'misia',
	'misic',
	'morph',
	'mycin',
	'nasty',
	'navir',
	'orama',
	'odont',
	'ology',
	'olone',
	'omics',
	'onium',
	'onomy',
	'onymy',
	'opsia',
	'orium',
	'osity',
	'otomy',
	'pagus',
	'pamil',
	'pants',
	'parin',
	'opath',
	'pause',
	'petal',
	'ophil',
	'phone',
	'phony',
	'phore',
	'phyll',
	'phyte',
	'pidem',
	'plast',
	'ploid',
	'pnoea',
	'poeia',
	'polis',
	'pride',
	'proof',
	'prost',
	'ptile',
	'quine',
	'racil',
	'relin',
	'retin',
	'rices',
	'rific',
	'rrhea',
	'salan',
	'sauce',
	'scape',
	'scope',
	'scopy',
	'serod',
	'shire',
	'sicle',
	'sophy',
	'speak',
	'spect',
	'stock',
	'stome',
	'stomy',
	'style',
	'styly',
	'tardy',
	'taxel',
	'terol',
	'therm',
	'thrin',
	'tinib',
	'topia',
	'topic',
	'treme',
	'trope',
	'troph',
	'tropy',
	'tuple',
	'verse',
	'ville',
	'viroc',
	'wards',
	'woman',
	'women',
	'worth',
	'xaban',
	'ximab',
	'ylene',
	'zilla',
	'zolac',
	'zumab',
	'aceous',
	'acious',
	'adelic',
	'adenia',
	'agogue',
	'aholic',
	'amivir',
	'amundo',
	'aneous',
	'athlon',
	'azenil',
	'azepam',
	'azolam',
	'azosin',
	'bactam',
	'bamate',
	'bility',
	'biosis',
	'biotic',
	'burger',
	'capone',
	'cardia',
	'carnil',
	'carpic',
	'chezia',
	'choron',
	'chrome',
	'cillin',
	'clinal',
	'clinic',
	'coccus',
	'colous',
	'cratic',
	'curium',
	'dactyl',
	'dazole',
	'dipine',
	'dipsia',
	'dutant',
	'ectomy',
	'ennial',
	'escent',
	'ferous',
	'formin',
	'fosine',
	'fungin',
	'furter',
	'gamous',
	'ogenic',
	'ogenin',
	'gerous',
	'giline',
	'golide',
	'gramme',
	'ograph',
	'hedral',
	'hedron',
	'holism',
	'iatric',
	'illion',
	'imundo',
	'inator',
	'irudin',
	'lagnia',
	'landia',
	'leptic',
	'logist',
	'logues',
	'lukast',
	'mancer',
	'maniac',
	'mantic',
	'mastia',
	'megaly',
	'merous',
	'metric',
	'mifene',
	'mobile',
	'morphy',
	'motide',
	'mycete',
	'netant',
	'nomics',
	'omatic',
	'ocracy',
	'odynia',
	'oholic',
	'ometer',
	'ometry',
	'orphan',
	'ostomy',
	'outlaw',
	'oxacin',
	'oxepin',
	'opathy',
	'opathy',
	'epathy',
	'ipathy',
	'opedia',
	'epedia',
	'openia',
	'people',
	'perone',
	'person',
	'ophage',
	'ophagy',
	'ophany',
	'ophile',
	'philia',
	'philic',
	'ophily',
	'ophobe',
	'phonia',
	'phonic',
	'physis',
	'pitant',
	'plasia',
	'plasty',
	'platin',
	'plegia',
	'plegic',
	'poride',
	'previr',
	'prilat',
	'profen',
	'pteran',
	'quinil',
	'renone',
	'ribine',
	'ridden',
	'riffic',
	'rinone',
	'ritide',
	'rozole',
	'rrhoea',
	'sartan',
	'saurus',
	'scopic',
	'selves',
	'semide',
	'setron',
	'sexual',
	'sphere',
	'splain',
	'stasis',
	'static',
	'statin',
	'steine',
	'tadine',
	'tastic',
	'tepine',
	'terone',
	'thermy',
	'tiazem',
	'tidine',
	'tizide',
	'trophy',
	'tropic',
	'tropin',
	'uretic',
	'valent',
	'vaptan',
	'verine',
	'virine',
	'virsen',
	'vorous',
	'vudine',
	'worthy',
	'zepine',
	'zygous',
	'athalon',
	'ability',
	'amidine',
	'andrian',
	'androus',
	'angular',
	'arabine',
	'aroonie',
	'arotene',
	'azepate',
	'azocine',
	'azodone',
	'betasol',
	'blastic',
	'borough',
	'bradine',
	'buterol',
	'carpous',
	'centric',
	'cephaly',
	'ception',
	'chorous',
	'clidine',
	'cycline',
	'dromous',
	'dronate',
	'enchyma',
	'eridine',
	'eroonie',
	'escence',
	'facient',
	'faction',
	'fibrate',
	'flurane',
	'agamous',
	'gastria',
	'ogatran',
	'ageddon',
	'ogenous',
	'glossia',
	'ography',
	'hourold',
	'iatrics',
	'ibility',
	'ication',
	'iferous',
	'illiard',
	'isation',
	'istical',
	'ization',
	'kinesis',
	'logical',
	'manship',
	'meister',
	'mestane',
	'metacin',
	'morelin',
	'morphic',
	'nakinra',
	'nercept',
	'nicline',
	'nomicon',
	'odontia',
	'oecious',
	'ologist',
	'onidine',
	'onomics',
	'opamine',
	'ophilic',
	'orphine',
	'orphone',
	'oxanide',
	'oxetine',
	'oxifene',
	'parinux',
	'aparous',
	'partite',
	'opathic',
	'peridol',
	'ophagia',
	'ophagic',
	'ophasia',
	'philiac',
	'philous',
	'ophobia',
	'ophobic',
	'phrenia',
	'poiesis',
	'polises',
	'pramine',
	'prazole',
	'preneur',
	'pristin',
	'prostil',
	'pterous',
	'reotide',
	'rolimus',
	'rrhagia',
	'rrhaphy',
	'rrhexis',
	'rubicin',
	'serpine',
	'spirone',
	'steride',
	'sterone',
	'strophy',
	'tacular',
	'teplase',
	'terenol',
	'thermal',
	'thermic',
	'tirelin',
	'tizolam',
	'traline',
	'trexate',
	'trigine',
	'trophic',
	'tropism',
	'ylidene',
	'ambulist',
	'anthropy',
	'apalooza',
	'centesis',
	'centrism',
	'cephalic',
	'ciclovir',
	'citabine',
	'clofenac',
	'conazole',
	'curonium',
	'ethidine',
	'fentanil',
	'fication',
	'floxacin',
	'ogenesis',
	'ogliptin',
	'glitazar',
	'oglutide',
	'gnathous',
	'ographer',
	'ographic',
	'lecithal',
	'alicious',
	'ilicious',
	'olicious',
	'elicious',
	'lutamide',
	'mageddon',
	'metasone',
	'morphism',
	'morphous',
	'nidazole',
	'nidipine',
	'opalooza',
	'peridone',
	'ophagous',
	'ophobiac',
	'phoresis',
	'phyllous',
	'salazide',
	'salazine',
	'stigmine',
	'tainment',
	'tegravir',
	'thiazide',
	'trakinra',
	'vastatin',
	'cephalous',
	'clidinium',
	'dermatous',
	'dralazine',
	'fosfamide',
	'gesterone',
	'gliflozin',
	'glitazone',
	'iatrician',
	'ification',
	'inwaiting',
	'istically',
	'mantadine',
	'methasone',
	'naissance',
	'piprazole',
	'plinerved',
	'prenaline',
	'something',
	'ographical',
	'opocalypse',
	'thiouracil',
	'sploitation',
]


////////// sort by length ///////////
// let sortedByLength = suffixList.sort((a, b) => a.length - b.length);
// fs.appendFile('suffix.txt', `${sortedByLength} \n`, function (err) {
// 	if (err) throw err;
// 	console.log('The "data to append" was appended to file!');
// });
////////// sort by length ///////////

let howMany = 100;
let inputText = 'Trash';



let suffixArray = suffixList.sort(() => Math.random() - Math.random())
	.slice(0, howMany)
	.join(`\n`);
// .splice(0, 0, `#${inputText}`)
console.log(suffixArray)

let hashTagSuffixArray = suffixList.map(el => `#${inputText}${el}`);


console.log(hashTagSuffixArray);





// const suffixtags = suffixList
// 	.sort(() => Math.random() - Math.random())
// 	.slice(0, 27)
// 	.toString()
// 	.replace(/-/g, `#${werd}`)
// 	.replace(/\,/g, '\n');


// const suffixing = suffixList
// 	.sort(() => Math.random() - Math.random())
// 	.slice(0, 27)
// 	.toString()
// 	.replace(/-/g, werd)
// 	.replace(/\,/g, ' \n');

// const suffixed = `${suffixing} \n`;
// //console.log(`\n${suffixing}\n`);
// //console.log(`${suffixtags}`);








